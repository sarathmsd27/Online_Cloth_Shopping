{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/user.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"../title/title.component\";\nfunction LoginComponent_div_10_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Should not be empty\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_10_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"MailId is not correct\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵtemplate(1, LoginComponent_div_10_div_1_Template, 2, 0, \"div\", 13);\n    i0.ɵɵtemplate(2, LoginComponent_div_10_div_2_Template, 2, 0, \"div\", 13);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.fc.email.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.fc.email.errors.email);\n  }\n}\nfunction LoginComponent_div_16_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Should not be empty\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵtemplate(1, LoginComponent_div_16_div_1_Template, 2, 0, \"div\", 13);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.fc.password.errors.required);\n  }\n}\nexport class LoginComponent {\n  constructor(fb, userService, ActivatedRoute, router) {\n    this.fb = fb;\n    this.userService = userService;\n    this.ActivatedRoute = ActivatedRoute;\n    this.router = router;\n    this.isSubmitted = false;\n    this.returnUrl = '';\n  }\n  ngOnInit() {\n    this.loginForm = this.fb.group({\n      email: ['', Validators.required, Validators.email],\n      password: ['', Validators.required]\n    });\n    this.returnUrl = this.ActivatedRoute.snapshot.queryParams.returnUrl;\n  }\n  get fc() {\n    return this.loginForm.controls;\n  }\n  submit() {\n    this.isSubmitted = true;\n    if (this.loginForm.invalid) return;\n    this.userService.login({\n      email: this.fc.email.value,\n      password: this.fc.password.value\n    }).subscribe(() => {\n      this.router.navigateByUrl(this.returnUrl);\n    });\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.UserService), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i3.Router));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 20,\n  vars: 3,\n  consts: [[1, \"container\"], [1, \"details\"], [\"title\", \"Login\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"input-container\"], [\"for\", \"email\"], [\"type\", \"email\", \"placeholder\", \"abd@gmail.com\", \"formControlName\", \"email\"], [\"class\", \"error-list\", 4, \"ngIf\"], [\"for\", \"password\"], [\"type\", \"password\", \"placeholder\", \"*******\", \"formControlName\", \"password\"], [1, \"button\"], [\"type\", \"submit\"], [1, \"error-list\"], [4, \"ngIf\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n      i0.ɵɵelement(2, \"app-title\", 2);\n      i0.ɵɵelementStart(3, \"form\", 3);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_3_listener() {\n        return ctx.submit();\n      });\n      i0.ɵɵelementStart(4, \"div\", 4)(5, \"div\", 4)(6, \"label\", 5);\n      i0.ɵɵtext(7, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\");\n      i0.ɵɵelement(9, \"input\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(10, LoginComponent_div_10_Template, 3, 2, \"div\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"div\", 4)(12, \"label\", 8);\n      i0.ɵɵtext(13, \"Password\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(14, \"div\");\n      i0.ɵɵelement(15, \"input\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(16, LoginComponent_div_16_Template, 2, 1, \"div\", 7);\n      i0.ɵɵelementStart(17, \"div\", 10)(18, \"button\", 11);\n      i0.ɵɵtext(19, \"Login\");\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngIf\", ctx.fc.email.errors && ctx.isSubmitted);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ctx.fc.password.errors && ctx.isSubmitted);\n    }\n  },\n  dependencies: [i4.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i5.TitleComponent],\n  styles: [\".container[_ngcontent-%COMP%]{\\r\\n    display:flex;\\r\\n    justify-content: center;\\r\\n    align-items: center;\\r\\n    height:100%;\\r\\n    margin-top:3rem;\\r\\n   \\r\\n}\\r\\n.details[_ngcontent-%COMP%]{\\r\\n  width:25rem;\\r\\n}\\r\\nform[_ngcontent-%COMP%]{\\r\\n    display:flex;\\r\\n    flex-direction:column;\\r\\n    justify-content: center;\\r\\n    padding: 1px;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9wYWdlcy9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksWUFBWTtJQUNaLHVCQUF1QjtJQUN2QixtQkFBbUI7SUFDbkIsV0FBVztJQUNYLGVBQWU7O0FBRW5CO0FBQ0E7RUFDRSxXQUFXO0FBQ2I7QUFDQTtJQUNJLFlBQVk7SUFDWixxQkFBcUI7SUFDckIsdUJBQXVCO0lBQ3ZCLFlBQVk7QUFDaEIiLCJzb3VyY2VzQ29udGVudCI6WyIuY29udGFpbmVye1xyXG4gICAgZGlzcGxheTpmbGV4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgaGVpZ2h0OjEwMCU7XHJcbiAgICBtYXJnaW4tdG9wOjNyZW07XHJcbiAgIFxyXG59XHJcbi5kZXRhaWxze1xyXG4gIHdpZHRoOjI1cmVtO1xyXG59XHJcbmZvcm17XHJcbiAgICBkaXNwbGF5OmZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjpjb2x1bW47XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIHBhZGRpbmc6IDFweDtcclxufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;;;;;;ICW3CC,2BAAsC;IAAAA,mCAAmB;IAAAA,iBAAM;;;;;IAC/DA,2BAAmC;IAAAA,qCAAqB;IAAAA,iBAAM;;;;;IAFlEA,+BAA+D;IAC3DA,uEAA+D;IAC/DA,uEAA8D;IAClEA,iBAAM;;;;IAFIA,eAA8B;IAA9BA,sDAA8B;IAC9BA,eAA2B;IAA3BA,mDAA2B;;;;;IAWjCA,2BAAyC;IAAAA,mCAAmB;IAAAA,iBAAM;;;;;IADzEA,+BAAkE;IAC3DA,uEAAkE;IACtEA,iBAAM;;;;IADIA,eAAiC;IAAjCA,yDAAiC;;;ADd/D,OAAM,MAAOC,cAAc;EAIzBC,YAAoBC,EAAc,EAAUC,WAAuB,EACzDC,cAA6B,EAC7BC,MAAa;IAFH,OAAE,GAAFH,EAAE;IAAsB,gBAAW,GAAXC,WAAW;IAC7C,mBAAc,GAAdC,cAAc;IACd,WAAM,GAANC,MAAM;IAJf,gBAAW,GAAC,KAAK;IACjB,cAAS,GAAC,EAAE;EAGY;EAEzBC,QAAQ;IACL,IAAI,CAACC,SAAS,GAAC,IAAI,CAACL,EAAE,CAACM,KAAK,CAAC;MAC5BC,KAAK,EAAC,CAAC,EAAE,EAAGX,UAAU,CAACY,QAAQ,EAACZ,UAAU,CAACW,KAAK,CAAC;MACjDE,QAAQ,EAAC,CAAC,EAAE,EAACb,UAAU,CAACY,QAAQ;KAChC,CAAC;IACF,IAAI,CAACE,SAAS,GAAG,IAAI,CAACR,cAAc,CAACS,QAAQ,CAACC,WAAW,CAACF,SAAS;EACtE;EACA,IAAIG,EAAE;IACJ,OAAQ,IAAI,CAACR,SAAS,CAACS,QAAQ;EACjC;EACAC,MAAM;IACJ,IAAI,CAACC,WAAW,GAAC,IAAI;IACrB,IAAG,IAAI,CAACX,SAAS,CAACY,OAAO,EAAE;IAE3B,IAAI,CAAChB,WAAW,CAACiB,KAAK,CAAC;MAACX,KAAK,EAAC,IAAI,CAACM,EAAE,CAACN,KAAK,CAACY,KAAK;MAACV,QAAQ,EAAC,IAAI,CAACI,EAAE,CAACJ,QAAQ,CACzEU;IAAK,CAAC,CAAC,CAACC,SAAS,CAAC,MAAI;MACpB,IAAI,CAACjB,MAAM,CAACkB,aAAa,CAAC,IAAI,CAACX,SAAS,CAAC;IAC3C,CAAC,CAAC;EACN;;AA1BWZ,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAwB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCV3B7B,8BAAuB;MAGfA,+BAAqC;MACrCA,+BAAoD;MAAtBA;QAAA,OAAY8B,YAAQ;MAAA,EAAC;MAC/C9B,8BAA6B;MAEFA,qBAAK;MAAAA,iBAAQ;MAChCA,2BAAK;MACDA,2BAAwE;MAC5EA,iBAAM;MACNA,iEAGM;MACVA,iBAAM;MACNA,+BAA6B;MACHA,yBAAQ;MAAAA,iBAAQ;MAG1CA,4BAAK;MACDA,4BAAwE;MAC5EA,iBAAM;MACLA,iEAES;MACVA,gCAAoB;MACMA,sBAAK;MAAAA,iBAAS;;;MAvB1CA,eAAuB;MAAvBA,yCAAuB;MAOQA,eAAoC;MAApCA,6DAAoC;MAYvCA,eAAuC;MAAvCA,gEAAuC","names":["Validators","i0","LoginComponent","constructor","fb","userService","ActivatedRoute","router","ngOnInit","loginForm","group","email","required","password","returnUrl","snapshot","queryParams","fc","controls","submit","isSubmitted","invalid","login","value","subscribe","navigateByUrl","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Sarath\\Desktop\\OnlineApp\\ShoppieCorner\\src\\app\\components\\pages\\login\\login.component.ts","C:\\Users\\Sarath\\Desktop\\OnlineApp\\ShoppieCorner\\src\\app\\components\\pages\\login\\login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { UserService } from 'src/app/services/user.service';\nimport { ActivatedRoute,Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n   loginForm!:FormGroup;\n   isSubmitted=false;\n   returnUrl='';\n  constructor(private fb:FormBuilder, private userService:UserService,\n    private ActivatedRoute:ActivatedRoute,\n    private router:Router){}\n\n  ngOnInit(): void {\n     this.loginForm=this.fb.group({\n      email:['',  Validators.required,Validators.email],\n      password:['',Validators.required]\n     }) \n     this.returnUrl = this.ActivatedRoute.snapshot.queryParams.returnUrl;\n  }\n  get fc(){\n    return  this.loginForm.controls;\n  }\n  submit(){\n    this.isSubmitted=true;\n    if(this.loginForm.invalid) return;\n\n    this.userService.login({email:this.fc.email.value,password:this.fc.password.\n      value}).subscribe(()=>{\n        this.router.navigateByUrl(this.returnUrl);\n      })\n  }\n    }\n","<div class=\"container\">\n     <div class=\"details\">\n        \n        <app-title title=\"Login\"></app-title>\n        <form [formGroup]=\"loginForm\" (ngSubmit)=\"submit()\">\n            <div class=\"input-container\">\n                <div class=\"input-container\">\n                    <label for=\"email\">Email</label>\n                    <div>\n                        <input type=\"email\" placeholder=\"abd@gmail.com\" formControlName=\"email\">\n                    </div>\n                    <div class=\"error-list\" *ngIf=\"fc.email.errors && isSubmitted\">\n                        <div *ngIf=\"fc.email.errors.required\">Should not be empty</div>\n                        <div *ngIf=\"fc.email.errors.email\">MailId is not correct</div>\n                    </div>\n                </div>\n                <div class=\"input-container\">\n                    <label for=\"password\">Password</label>\n                </div>\n               \n                <div>\n                    <input type=\"password\" placeholder=\"*******\" formControlName=\"password\">\n                </div>\n                 <div class=\"error-list\" *ngIf=\"fc.password.errors && isSubmitted\">\n                        <div *ngIf=\"fc.password.errors.required\">Should not be empty</div>\n                    </div>\n                <div class=\"button\">\n                    <button type=\"submit\">Login</button>\n                </div>\n            </div>\n        </form>\n    </div>\n   \n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}