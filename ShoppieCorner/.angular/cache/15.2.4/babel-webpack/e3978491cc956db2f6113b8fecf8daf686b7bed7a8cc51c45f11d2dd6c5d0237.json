{"ast":null,"code":"import { BehaviorSubject, tap } from 'rxjs';\nimport { User } from '../shared/model/User';\nimport { USER_LOGIN_URL } from '../shared/constants/url';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"ngx-toastr\";\nconst USER_KEY = 'User';\nexport let UserService = /*#__PURE__*/(() => {\n  class UserService {\n    constructor(http, toastrService) {\n      this.http = http;\n      this.toastrService = toastrService;\n      this.userSubject = new BehaviorSubject(this.getUserFromLocalStorage());\n      this.userObservable = this.userSubject.asObservable();\n    }\n    login(userLogin) {\n      return this.http.post(USER_LOGIN_URL, userLogin).pipe(tap({\n        next: user => {\n          this.setUserToLocalStorage(user);\n          this.toastrService.success(`Welcome to ShoppieCorner ${user.name}!`, 'Login Successfull !');\n        },\n        error: errorResponse => {\n          this.toastrService.error(errorResponse.console.error, 'Login Failed');\n        }\n      }));\n    }\n    logout() {\n      this.userSubject.next(new User());\n      localStorage.removeItem(USER_KEY);\n      window.location.reload();\n    }\n    setUserToLocalStorage(user) {\n      localStorage.setItem(USER_KEY, JSON.stringify(user));\n    }\n    getUserFromLocalStorage() {\n      const userJson = localStorage.getItem(USER_KEY);\n      if (userJson) return JSON.parse(userJson);\n      return new User();\n    }\n  }\n  UserService.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ToastrService));\n  };\n  UserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac,\n    providedIn: 'root'\n  });\n  return UserService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}