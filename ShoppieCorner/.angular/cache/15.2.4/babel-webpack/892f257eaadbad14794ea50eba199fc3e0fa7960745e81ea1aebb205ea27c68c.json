{"ast":null,"code":"import { BehaviorSubject, tap } from 'rxjs';\nimport { User } from '../shared/model/User';\nimport { USER_LOGIN_URL } from '../shared/constants/url';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"ngx-toastr\";\nexport class UserService {\n  constructor(http, toastrService) {\n    this.http = http;\n    this.toastrService = toastrService;\n    this.userSubject = new BehaviorSubject(new User());\n    this.userObservable = this.userSubject.asObservable();\n  }\n  login(userLogin) {\n    return this.http.post(USER_LOGIN_URL, userLogin).pipe(tap({\n      next: user => {\n        this.toastrService.success(`Welcome to ShoppieCorner ${user.name}!`, 'Login Successfull !');\n      },\n      error: errorResponse => {\n        this.toastrService.error(errorResponse.console.error, 'Login Failed');\n      }\n    }));\n  }\n}\nUserService.ɵfac = function UserService_Factory(t) {\n  return new (t || UserService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ToastrService));\n};\nUserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserService,\n  factory: UserService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAASA,eAAe,EAAcC,GAAG,QAAQ,MAAM;AACvD,SAASC,IAAI,QAAQ,sBAAsB;AAG3C,SAASC,cAAc,QAAQ,yBAAyB;;;;AAQxD,OAAM,MAAOC,WAAW;EAItBC,YAAoBC,IAAe,EAASC,aAA2B;IAAnD,SAAI,GAAJD,IAAI;IAAoB,kBAAa,GAAbC,aAAa;IAFjD,gBAAW,GAAG,IAAIP,eAAe,CAAO,IAAIE,IAAI,EAAE,CAAC;IAGzD,IAAI,CAACM,cAAc,GAAG,IAAI,CAACC,WAAW,CAACC,YAAY,EAAE;EACtD;EAEAC,KAAK,CAACC,SAAoB;IACxB,OAAO,IAAI,CAACN,IAAI,CAACO,IAAI,CAAOV,cAAc,EAAES,SAAS,CAAC,CAACE,IAAI,CAACb,GAAG,CAAC;MAC9Dc,IAAI,EAAGC,IAAI,IAAI;QACb,IAAI,CAACT,aAAa,CAACU,OAAO,CAAC,4BAA4BD,IAAI,CAACE,IAAI,GAAG,EACjE,qBAAqB,CAAC;MAC1B,CAAC;MACDC,KAAK,EAAGC,aAAa,IAAI;QACvB,IAAI,CAACb,aAAa,CAACY,KAAK,CAACC,aAAa,CAACC,OAAO,CAACF,KAAK,EAAE,cAAc,CAAC;MAEvE;KACD,CAAC,CAAC;EACL;;AAnBUf,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAkB,SAAXlB,WAAW;EAAAmB,YAFV;AAAM","names":["BehaviorSubject","tap","User","USER_LOGIN_URL","UserService","constructor","http","toastrService","userObservable","userSubject","asObservable","login","userLogin","post","pipe","next","user","success","name","error","errorResponse","console","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Sarath\\Desktop\\OnlineApp\\ShoppieCorner\\src\\app\\services\\user.service.ts"],"sourcesContent":[" import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, tap } from 'rxjs';\nimport { User } from '../shared/model/User';\nimport { IUserLogin } from '../shared/interfaces/IUserLogin';\nimport { HttpClient } from '@angular/common/http';\nimport { USER_LOGIN_URL } from '../shared/constants/url';\nimport { ToastrService } from 'ngx-toastr';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  \n  private userSubject = new BehaviorSubject<User>(new User());\n  public userObservable:Observable<User>\n  constructor(private http:HttpClient,private toastrService:ToastrService) {\n    this.userObservable = this.userSubject.asObservable();\n   }\n\n   login(userLogin:IUserLogin):Observable<User>{\n     return this.http.post<User>(USER_LOGIN_URL, userLogin).pipe(tap({\n       next: (user) => {\n         this.toastrService.success(`Welcome to ShoppieCorner ${user.name}!`,\n           'Login Successfull !');\n       },\n       error: (errorResponse) => {\n         this.toastrService.error(errorResponse.console.error, 'Login Failed');\n\n       }\n     }));\n   }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}